version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_DB: userhub
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: my_redis
    restart: always
    ports:
      - "6379:6379"

  app1:
    build: .
    container_name: spring_app1
    ports:
      - "8081:8080"
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userhub
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    volumes:
      - images_data:/app/images
      - ./init-images:/app/images/avatars
    restart: on-failure

  app2:
    build: .
    container_name: spring_app2
    ports:
      - "8082:8080"
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userhub
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    volumes:
      - images_data:/app/images
      - ./init-images:/app/images/avatars
    restart: on-failure

  app3:
    build: .
    container_name: spring_app3
    ports:
      - "8083:8080"
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/userhub
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    volumes:
      - images_data:/app/images
      - ./init-images:/app/images/avatars
    restart: on-failure

  nginx1:
    build:
      context: ./nginx
    container_name: nginx1
    ports:
      - "8091:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - images_data:/app/images
    depends_on:
      - app1
      - app2
      - app3
      - redis

  nginx2:
    build:
      context: ./nginx
    container_name: nginx2
    ports:
      - "8092:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - images_data:/app/images
    depends_on:
      - app1
      - app2
      - app3
      - redis

  nginx3:
    build:
      context: ./nginx
    container_name: nginx3
    ports:
      - "8093:80"
    volumes:
      - ./nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro
      - images_data:/app/images
    depends_on:
      - app1
      - app2
      - app3
      - redis

volumes:
  postgres_data:
  images_data:
